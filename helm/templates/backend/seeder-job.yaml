{{- $appName := include "app.name" . -}}
{{- $appChart := include "app.chart" . -}}
{{- $component := "backend-seeder" -}}
{{- $componentName := printf "%s-%s" $appName $component -}}
{{- $databaseReferenceName := printf "%s-%s" $appName "database" -}}
{{- $volumeClaimName :=  tpl .Values.sharedVolumeClaimName . | default false -}}
{{- $this := . -}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ $componentName }}"
  annotations:
   {{- with .Values.backend.annotations }}
{{ tpl (toYaml .) $this | indent 4 }}
  {{- end }}
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    app: {{ $appName }}
    chart: {{ $appChart }}
    heritage: {{ $this.Release.Service }}
    release: {{ $this.Release.Name }}
    {{ $appName }}.service: {{ $component }}
    component: {{ $component }}
    {{- with .Values.backend.labels }}
{{ tpl (toYaml .) $this | indent 4 }}
    {{- end }}
spec:
  template:
    metadata:
      name: "{{ $componentName }}"
      {{- with .Values.backend.annotations }}
      annotations:
{{ tpl (toYaml .) $this | indent 8 }}
      {{- end }}
      labels:
        app: {{ $appName }}
        chart: {{ $appChart }}
        heritage: {{ $this.Release.Service }}
        release: {{ $this.Release.Name }}
        {{ $appName }}.service: {{ $component }}
        component: {{ $component }}
        # openproject.network
        {{- range $networkName := .Values.backend.networks }}
        {{ printf "%s.network/%s" $appName $networkName }}: "true"
        {{- end }}
        {{- with .Values.backend.labels }}
{{ tpl (toYaml .) $this | indent 8 }}
        {{- end }}
    spec:
      restartPolicy: OnFailure
      containers:
        - name: seeder
          image: {{ default .Values.backend.image .Values.openprojectImage }}
          args:
            - ./docker/prod/seeder
          env:
            {{- with .Values.database.secret }}
              {{- range $k,$v := . }}
            - name: {{ $k }}
              valueFrom:
                secretKeyRef:
                  name: {{ $databaseReferenceName }}
                  key: {{ $k }}
                  optional: false
              {{- end}}
            {{- end}}
            - name: DATABASE_URL
              value: postgres://postgres:$(POSTGRES_PASSWORD)@{{ $databaseReferenceName }}:5432/openproject?pool=20&encoding=unicode&reconnect=true
            - name: IMAP_ENABLED
              value: "false"
            - name: OPENPROJECT_CACHE__MEMCACHE__SERVER
              value: {{ printf "%s-%s" $appName "cache" }}:11211
            {{- with .Values.backend.env }}
              {{- range $k,$v := .}}
            - name: {{ $k }}
              value: {{ tpl $v $this | quote }}
              {{- end }}
            {{- end }}
          {{- with .Values.backend.resources }}
          resources:
    {{ tpl (toYaml .) $this | indent 8 }}
          {{- end }}
          {{- if $volumeClaimName }}
          volumeMounts:
            - mountPath: /var/openproject/assets
              name: opdata
          {{- end }}
      {{- if $volumeClaimName }}
      volumes:
        - name: opdata
          persistentVolumeClaim:
            claimName: {{ $volumeClaimName }}
      {{- end }}
